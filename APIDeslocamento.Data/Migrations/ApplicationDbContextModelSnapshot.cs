// <auto-generated />
using System;
using APIDeslocamento.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace APIDeslocamento.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("APIDeslocamento.Domain.Entities.Carro", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("Descricao");

                    b.Property<string>("Placa")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Placa");

                    b.HasKey("Id");

                    b.ToTable("Carro", (string)null);
                });

            modelBuilder.Entity("APIDeslocamento.Domain.Entities.Cliente", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)")
                        .HasColumnName("Cpf");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("Nome");

                    b.HasKey("Id");

                    b.ToTable("Cliente", (string)null);
                });

            modelBuilder.Entity("APIDeslocamento.Domain.Entities.Condutor", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Email");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("Nome");

                    b.HasKey("Id");

                    b.ToTable("Condutor", (string)null);
                });

            modelBuilder.Entity("APIDeslocamento.Domain.Entities.Deslocamento", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long>("CarroId")
                        .HasMaxLength(10)
                        .HasColumnType("bigint")
                        .HasColumnName("CarroId");

                    b.Property<long>("ClienteId")
                        .HasMaxLength(10)
                        .HasColumnType("bigint")
                        .HasColumnName("ClienteId");

                    b.Property<long>("CondutorId")
                        .HasMaxLength(10)
                        .HasColumnType("bigint")
                        .HasColumnName("CondutorId");

                    b.Property<DateTime>("DataHoraFim")
                        .HasMaxLength(10)
                        .HasColumnType("datetime2")
                        .HasColumnName("DataHoraFim");

                    b.Property<DateTime>("DataHoraInicio")
                        .HasMaxLength(10)
                        .HasColumnType("datetime2")
                        .HasColumnName("DataHoraInicio");

                    b.Property<string>("Observacao")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasDefaultValue("sem observação")
                        .HasColumnName("Observacao");

                    b.Property<double>("QuilometragemFinal")
                        .HasMaxLength(50)
                        .HasColumnType("float")
                        .HasColumnName("QuilometragemFinal");

                    b.Property<double>("QuilometragemInicial")
                        .HasMaxLength(50)
                        .HasColumnType("float")
                        .HasColumnName("QuilometragemInicial");

                    b.HasKey("Id");

                    b.ToTable("Deslocamento", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
